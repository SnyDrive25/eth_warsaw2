"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubgraphClient = void 0;
const graphql_1 = require("graphql");
const graphql_request_1 = require("graphql-request");
const lodash_1 = require("lodash");
const SFError_1 = require("../SFError");
class SubgraphClient {
    constructor(subgraphUrl) {
        this.subgraphUrl = subgraphUrl;
    }
    async request(document, variables) {
        try {
            return await (0, graphql_request_1.request)(this.subgraphUrl, document, cleanVariables(variables));
        }
        catch (err) {
            const queryString = (0, lodash_1.isString)(document)
                ? document
                : (0, graphql_1.print)(document);
            throw new SFError_1.SFError({
                type: "SUBGRAPH_ERROR",
                message: `Failed call to subgraph with: 
${queryString}`,
                cause: err,
            });
        }
    }
}
exports.SubgraphClient = SubgraphClient;
// Inspired by: https://stackoverflow.com/a/38340730
// Remove properties with null, undefined, empty string values.
function cleanVariables(variables) {
    return Object.fromEntries(Object.entries(variables)
        .filter(([, value]) => value !== "" && value !== null && value !== undefined)
        .map(([key, value]) => [
        key,
        value === Object(value) && !Array.isArray(value)
            ? cleanVariables(value)
            : value,
    ]));
}
//# sourceMappingURL=SubgraphClient.js.map